package(default_visibility = ["//visibility:public"])

load("@rules_python//python:defs.bzl", "py_binary")
load("@python_deps//:requirements.bzl", "requirement")
load("@io_bazel_rules_docker//lang:image.bzl", container_image = "app_layer")


# client example
py_binary(
    name = "client_example",
    srcs = [
        "client_example.py",
    ],
    deps = [
        requirement("grpcio"),
        "//protos:augmentation_service_pb2",
        "//protos:augmentation_service_pb2_grpc",
    ],
)

container_image(
    name = "client_example_image",
    base = "@python-base-image//image",
    binary = ":client_example",
    docker_run_flags = "-it --rm --network=host",
)


# prototype algorithm example
py_binary(
    name = "prototype_example",
    srcs = [
        "prototype_example.py",
    ],
    deps = [
        requirement("future"),
        "//augmentation_grpc_service:grpc_server_sync",
        "//augmentation_grpc_service/services:prototype_service_sync",
        "//protos:augmentation_service_pb2_grpc",
    ],
)

container_image(
    name = "prototype_example_image",
    base = "@python-base-image//image",
    binary = ":prototype_example",
    docker_run_flags = "-it --rm --network=host",
)